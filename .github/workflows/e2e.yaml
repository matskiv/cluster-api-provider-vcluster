name: E2E CI

on:
  push:
    branches:
      - "misc-updates-fixes"
  release:
    types: [created]
  pull_request:
    types: [opened,synchronize,reopened,edited]
    branches:
      - main 
    paths:
      - "Dockerfile"
      - "**.go"
      - "!**_test.go" # exclude test files to ignore unit test changes
      - "test/**" # include test files in e2e again
      - ".github/workflows/e2e.yaml"
      - "config/**"
      - "templates/**"
      - "metadata.yaml"
      - "Makefile"
      - "clusterctl-settings.json"
      - "PROJECT"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}-ci:PR${{ github.event.number }}

jobs:
  e2e:
    name: Execute testsuite
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distribution: ["k3s"] #, "k8s", "k0s", "eks"]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Set up kind with K8s version v1.24.2
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.14.0"
        image: kindest/node:v1.24.2
    - name: Testing kind cluster set-up
      run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "kubectl config current-context:" $(kubectl config current-context)
          echo "KUBECONFIG env var:" ${KUBECONFIG}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - name: Setup DevSpace
      uses: loft-sh/setup-devspace@main
      with:
        version: v6.0.0-beta.4

    # Note: keep the devspace render and devspace run commands in sync!
    - name: Deploy provider
      run: |
          echo "Render what will get deployed"
          devspace run deploy --skip-push --skip-build --render
          echo "Deploy vcluster"
          devspace run deploy --skip-push

    - name: Wait until provider is ready
      id: wait-until-provider-is-ready
      run: kubectl wait --for=condition=ready pod -l control-plane=cluster-api-provider-vcluster-controller-manager -n cluster-api-provider-vcluster-system --timeout=120s
      continue-on-error: true
    
    - name: Collect deployment information in case provider fails to start
      if: steps.wait-until-provider-is-ready.outcome == 'failure'
      run: |
        kubectl get pods -o yaml -n cluster-api-provider-vcluster-system
        echo "======================================================================================================================"
        kubectl get events -n cluster-api-provider-vcluster-system
        echo "======================================================================================================================"
        kubectl logs -l control-plane=cluster-api-provider-vcluster-controller-manager -n cluster-api-provider-vcluster-system -c manager --tail=500
        exit 1

    - name: Execute e2e tests
      id: execute-e2e-tests
      working-directory: ./test/e2e
      run: CHART=${{ matrix.distribution}} go test -v -ginkgo.v
      continue-on-error: true

    - name: Print provider logs if e2e tests fail
      if: steps.execute-e2e-tests.outcome == 'failure'
      run: | 
        kubectl get events -n cluster-api-provider-vcluster-system --sort-by='.lastTimestamp'
        echo "======================================================================================================================"
        kubectl logs -l control-plane=cluster-api-provider-vcluster-controller-manager -n cluster-api-provider-vcluster-system -c manager --tail=5000
        exit 1
